//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace chatgateway.ChatRoomWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/chatroom/server.php?wsdl", ConfigurationName="ChatRoomWebService.ChatRoomWebServicePortType")]
    public interface ChatRoomWebServicePortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_authenticate_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom get_authenticate_user(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_authenticate_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom> get_authenticate_userAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_userAsync(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] delete_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> delete_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] insert_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> insert_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] update_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> update_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_by_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user_by_id(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_by_id", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_user_by_idAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] get_filter_user(chatgateway.ChatRoomWebService.UserFilterChatRoom user_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_user", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_filter_userAsync(chatgateway.ChatRoomWebService.UserFilterChatRoom user_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_by_user_discussion_list", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user_by_user_discussion_list(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_by_user_discussion_list", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_user_by_user_discussion_listAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_message", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] get_data_message(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_message", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_data_messageAsync(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_message", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] delete_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_message", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> delete_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_message", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] insert_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_message", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> insert_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_message", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] update_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_message", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> update_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_message_by_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] get_data_message_by_id(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_message_by_id", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_data_message_by_idAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_message", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.MessageChatRoom[] get_filter_message(chatgateway.ChatRoomWebService.MessageFilterChatRoom message_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_message", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_filter_messageAsync(chatgateway.ChatRoomWebService.MessageFilterChatRoom message_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussionAsync(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] delete_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> delete_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] insert_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> insert_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] update_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> update_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_id(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_id", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_idAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_filter_discussion(chatgateway.ChatRoomWebService.DiscussionFilterChatRoom discussion_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_filter_discussionAsync(chatgateway.ChatRoomWebService.DiscussionFilterChatRoom discussion_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_user_discussion_list", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_user_discussion_list(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_user_discussion_list", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_user_discussion_listAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_message_list", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_message_list(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_discussion_by_message_list", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_message_listAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_data_user_discussion(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_data_user_discussionAsync(string nbLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_user_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] delete_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/delete_data_user_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> delete_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_user_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] insert_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/insert_data_user_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> insert_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_user_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] update_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/update_data_user_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> update_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_discussion_by_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_data_user_discussion_by_id(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_data_user_discussion_by_id", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_data_user_discussion_by_idAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_user_discussion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DiscussionChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageChatRoom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(User_discussionChatRoom))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_filter_user_discussion(chatgateway.ChatRoomWebService.User_discussionFilterChatRoom user_discussion_array_list_filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/chatroom/server.php/get_filter_user_discussion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_filter_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionFilterChatRoom user_discussion_array_list_filter);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class UserChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class User_discussionFilterChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int userIdField;
        
        private int discussionIdField;
        
        private string operatorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        public int DiscussionId {
            get {
                return this.discussionIdField;
            }
            set {
                this.discussionIdField = value;
                this.RaisePropertyChanged("DiscussionId");
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
                this.RaisePropertyChanged("Operator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class DiscussionFilterChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string dateField;
        
        private string operatorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
                this.RaisePropertyChanged("Operator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class DiscussionChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string dateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class MessageFilterChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int discussionIdField;
        
        private int userIdField;
        
        private string dateField;
        
        private string contentField;
        
        private string operatorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public int DiscussionId {
            get {
                return this.discussionIdField;
            }
            set {
                this.discussionIdField = value;
                this.RaisePropertyChanged("DiscussionId");
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("Content");
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
                this.RaisePropertyChanged("Operator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class MessageChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int discussionIdField;
        
        private int userIdField;
        
        private string dateField;
        
        private string contentField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public int DiscussionId {
            get {
                return this.discussionIdField;
            }
            set {
                this.discussionIdField = value;
                this.RaisePropertyChanged("DiscussionId");
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("Content");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class User_discussionChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int userIdField;
        
        private int discussionIdField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        public int DiscussionId {
            get {
                return this.discussionIdField;
            }
            set {
                this.discussionIdField = value;
                this.RaisePropertyChanged("DiscussionId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://localhost/chatroom/server.php?wsdl")]
    public partial class UserFilterChatRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string operatorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
                this.RaisePropertyChanged("Operator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChatRoomWebServicePortTypeChannel : chatgateway.ChatRoomWebService.ChatRoomWebServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatRoomWebServicePortTypeClient : System.ServiceModel.ClientBase<chatgateway.ChatRoomWebService.ChatRoomWebServicePortType>, chatgateway.ChatRoomWebService.ChatRoomWebServicePortType {
        
        public ChatRoomWebServicePortTypeClient() {
        }
        
        public ChatRoomWebServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatRoomWebServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomWebServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomWebServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom get_authenticate_user(string username, string password) {
            return base.Channel.get_authenticate_user(username, password);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom> get_authenticate_userAsync(string username, string password) {
            return base.Channel.get_authenticate_userAsync(username, password);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user(string nbLine) {
            return base.Channel.get_data_user(nbLine);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_userAsync(string nbLine) {
            return base.Channel.get_data_userAsync(nbLine);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] delete_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.delete_data_user(user_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> delete_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.delete_data_userAsync(user_array_list);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] insert_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.insert_data_user(user_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> insert_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.insert_data_userAsync(user_array_list);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] update_data_user(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.update_data_user(user_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> update_data_userAsync(chatgateway.ChatRoomWebService.UserChatRoom[] user_array_list) {
            return base.Channel.update_data_userAsync(user_array_list);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user_by_id(string id) {
            return base.Channel.get_data_user_by_id(id);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_user_by_idAsync(string id) {
            return base.Channel.get_data_user_by_idAsync(id);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] get_filter_user(chatgateway.ChatRoomWebService.UserFilterChatRoom user_array_list_filter) {
            return base.Channel.get_filter_user(user_array_list_filter);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_filter_userAsync(chatgateway.ChatRoomWebService.UserFilterChatRoom user_array_list_filter) {
            return base.Channel.get_filter_userAsync(user_array_list_filter);
        }
        
        public chatgateway.ChatRoomWebService.UserChatRoom[] get_data_user_by_user_discussion_list(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.get_data_user_by_user_discussion_list(user_discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.UserChatRoom[]> get_data_user_by_user_discussion_listAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.get_data_user_by_user_discussion_listAsync(user_discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] get_data_message(string nbLine) {
            return base.Channel.get_data_message(nbLine);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_data_messageAsync(string nbLine) {
            return base.Channel.get_data_messageAsync(nbLine);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] delete_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.delete_data_message(message_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> delete_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.delete_data_messageAsync(message_array_list);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] insert_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.insert_data_message(message_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> insert_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.insert_data_messageAsync(message_array_list);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] update_data_message(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.update_data_message(message_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> update_data_messageAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.update_data_messageAsync(message_array_list);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] get_data_message_by_id(string id) {
            return base.Channel.get_data_message_by_id(id);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_data_message_by_idAsync(string id) {
            return base.Channel.get_data_message_by_idAsync(id);
        }
        
        public chatgateway.ChatRoomWebService.MessageChatRoom[] get_filter_message(chatgateway.ChatRoomWebService.MessageFilterChatRoom message_array_list_filter) {
            return base.Channel.get_filter_message(message_array_list_filter);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.MessageChatRoom[]> get_filter_messageAsync(chatgateway.ChatRoomWebService.MessageFilterChatRoom message_array_list_filter) {
            return base.Channel.get_filter_messageAsync(message_array_list_filter);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion(string nbLine) {
            return base.Channel.get_data_discussion(nbLine);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussionAsync(string nbLine) {
            return base.Channel.get_data_discussionAsync(nbLine);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] delete_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.delete_data_discussion(discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> delete_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.delete_data_discussionAsync(discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] insert_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.insert_data_discussion(discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> insert_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.insert_data_discussionAsync(discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] update_data_discussion(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.update_data_discussion(discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> update_data_discussionAsync(chatgateway.ChatRoomWebService.DiscussionChatRoom[] discussion_array_list) {
            return base.Channel.update_data_discussionAsync(discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_id(string id) {
            return base.Channel.get_data_discussion_by_id(id);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_idAsync(string id) {
            return base.Channel.get_data_discussion_by_idAsync(id);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_filter_discussion(chatgateway.ChatRoomWebService.DiscussionFilterChatRoom discussion_array_list_filter) {
            return base.Channel.get_filter_discussion(discussion_array_list_filter);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_filter_discussionAsync(chatgateway.ChatRoomWebService.DiscussionFilterChatRoom discussion_array_list_filter) {
            return base.Channel.get_filter_discussionAsync(discussion_array_list_filter);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_user_discussion_list(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.get_data_discussion_by_user_discussion_list(user_discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_user_discussion_listAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.get_data_discussion_by_user_discussion_listAsync(user_discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.DiscussionChatRoom[] get_data_discussion_by_message_list(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.get_data_discussion_by_message_list(message_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.DiscussionChatRoom[]> get_data_discussion_by_message_listAsync(chatgateway.ChatRoomWebService.MessageChatRoom[] message_array_list) {
            return base.Channel.get_data_discussion_by_message_listAsync(message_array_list);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_data_user_discussion(string nbLine) {
            return base.Channel.get_data_user_discussion(nbLine);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_data_user_discussionAsync(string nbLine) {
            return base.Channel.get_data_user_discussionAsync(nbLine);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] delete_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.delete_data_user_discussion(user_discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> delete_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.delete_data_user_discussionAsync(user_discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] insert_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.insert_data_user_discussion(user_discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> insert_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.insert_data_user_discussionAsync(user_discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] update_data_user_discussion(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.update_data_user_discussion(user_discussion_array_list);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> update_data_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionChatRoom[] user_discussion_array_list) {
            return base.Channel.update_data_user_discussionAsync(user_discussion_array_list);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_data_user_discussion_by_id(string id) {
            return base.Channel.get_data_user_discussion_by_id(id);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_data_user_discussion_by_idAsync(string id) {
            return base.Channel.get_data_user_discussion_by_idAsync(id);
        }
        
        public chatgateway.ChatRoomWebService.User_discussionChatRoom[] get_filter_user_discussion(chatgateway.ChatRoomWebService.User_discussionFilterChatRoom user_discussion_array_list_filter) {
            return base.Channel.get_filter_user_discussion(user_discussion_array_list_filter);
        }
        
        public System.Threading.Tasks.Task<chatgateway.ChatRoomWebService.User_discussionChatRoom[]> get_filter_user_discussionAsync(chatgateway.ChatRoomWebService.User_discussionFilterChatRoom user_discussion_array_list_filter) {
            return base.Channel.get_filter_user_discussionAsync(user_discussion_array_list_filter);
        }
    }
}
